name: Tests

# Test on all pushes, except when the push is literally just a tag (because we
# tag automatically via CI, and therefore there's no extra code in that push).
# Also, only test on pull requests into master/dev.
on:
  push:
    tags-ignore:
      - 'v*'
  pull_request:
    branches:
      - 'main'

jobs:
  cpu_tests:
    env:
      ENV_NAME: tests
      PYTHON: ${{ matrix.python-version }}
      OS: ${{ matrix.os }}
    name: Testing
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.9, "3.10", "3.11"]
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 1
      - uses: mpi4py/setup-mpi@v1
      - uses: FedericoCarboni/setup-ffmpeg@v2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install
        run: |
          pip install .[test]

      - name: Run Tests
        run: |
          python -m pytest --cov=vis_cpu --cov-config=.coveragerc --cov-report xml:./coverage.xml --durations=25 --log-cli-level=INFO

      - name: Upload coverage data
        uses: "actions/upload-artifact@v3"
        with:
          name: coverage-data
          path: ".coverage.*"

  gpu_tests:
    env:
      ENV_NAME: tests
      PYTHON: "3.10"
      OS: Ubuntu
    name: Self-Hosted Tests (GPU)
    runs-on: [self-hosted, gpu]

    steps:
      - name: Add Home to PATH
        run: |
          echo "/home/locoadmin/bin" >> $GITHUB_PATH
          echo "/usr/local/cuda/bin" >> $GITHUB_PATH

      - uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON }}

      - name: Install
        run: |
          echo $(which pip)
          pip install .[test,gpu]

      - name: Run Tests
        run: |
          python -m pytest -k "gpu" --cov=vis_cpu --cov-config=.coveragerc --cov-report xml:./coverage.xml --durations=25 --log-cli-level=INFO

      - name: Upload coverage data
        uses: "actions/upload-artifact@v3"
        with:
          name: coverage-data
          path: ".coverage.*"

  coverage:
    runs-on: ubuntu-latest
    needs: [cpu_tests,gpu_tests]
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Download coverage data
        uses: actions/download-artifact@v3
        with:
          name: coverage-data

      - name: Install dependencies
        run: |
          pip install coverage[toml]

      - name: Combine coverage data and display human readable report
        run: |
          coverage combine
          coverage report

      - name: Create coverage report
        run: |
          coverage xml -o coverage.xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v3.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
