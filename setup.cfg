# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = vis_cpu
description = Fast visibility simulator with interface to CPU and GPU
author = HERA-Team
author-email = steven.g.murray@asu.edu
license = mit
long-description = file: README.rst
long-description-content-type = text/x-rst; charset=UTF-8
url = https://github.com/hera-team/vis_cpu
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python

[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    =src

# Add here dependencies of your project (semicolon/line-separated), e.g.
install_requires =
    numpy
    scipy
    astropy

# The usage of test_requires is discouraged, see `Dependency Management` docs
# tests_require = pytest; pytest-cov
# Require a specific Python version, e.g. Python 2.7 or >= 3.4
# python_requires = >=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install vis_cpu[PDF]` like:
# PDF = ReportLab; RXP
# Add here test requirements (semicolon/line-separated)
test =
    pytest
    pytest-cov

gpu =
    pycuda
    scikit-cuda

docs =
    sphinx
    nbsphinx
    sphinx_rtd_theme
    numpydoc

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = vis_cpu.module:function
# For example:
# console_scripts =
#     fibonacci = vis_cpu.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[test]
# py.test options when running `python setup.py test`
# addopts = --verbose
extras = True

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov vis_cpu --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests

[aliases]
dists = bdist_wheel

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = build/sphinx

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
ignore =
    E203
    E266
    E501
    W503
    F403
    F401
    E231

max-line-length = 88
# Should be 18.
max-complexity = 18
rst-roles =
    class
    func
    mod
    data
    const
    meth
    attr
    exc
    obj
rst-directives =
    note
    warning
    versionadded
    versionchanged
    deprecated
    seealso

exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py
